%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.24.5 (http://poppler.freedesktop.org)
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Linux 3.13.0-107-generic #154-Ubuntu SMP Tue Dec 20 09:57:27 UTC 2016 x86_64.
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 402 293
%%HiResBoundingBox: 0 0 401.2 292.92
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  2 array astore
  /setpagedevice where {
    pop 2 dict begin
      /PageSize exch def
      /ImagingBBox null def
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font PSHVPX+Helvetica-Bold
%!FontType1-1.0: PSHVPX+Helvetica-Bold
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment; Cyrillic glyphs added by Valek Filippov \(C\) 2001-2005) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /PSHVPX+Helvetica-Bold def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 824 741] readonly def
/StrokeWidth 0 def
/UniqueID 5020904 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 48 /zero put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F81ADB02AFF24E5D868D68195CD5C0705234B24901D6BCBC0562D42
D219CCE983539A0837FC73619E1137448AB941192FDE2CD88CA764A5426E0302
20E599EF0B83626EDADC59CD0D87571D7BCD4E00EB3E83C5407FD0487834869B
9530AB2054F80B5C0D5A76038E3D8ACE1C6F0E0D07BAD6D12D4E9780E9DD0465
C1DAEA852EADFB7DE54EF3EAF9E8E81D4E97F8CE3C657DFBB8BB4ADBEE6A3AEF
BE7E16ED4A9C338ECC49D51740A1DFCF730D74AD2A2AA3C4F00E6F567C7138D4
8F93838AD81F0FFF086373F18B6F6454F648A7FEAA2B33303E35721F130B564B
410081C0B27D4421379057BBDD79F281FA10024FBCF587CCB70F7C0CAB5C99B8
290E90778C46035C6B00A56D11001924BEE3DFB63917E086079CBEF9E055A021
E9346729F58827323FB40DA0A9DBC26CEFD6C66848B6288A3DD3067875AC84FC
4210BEAD82B8C56120720B50496D7837BBE25EE04209178B11F4DC6A57F25352
6FC5ED3C79A9F03DB7603C919C00CA1CB61C27DA70290B725BA56E7CC15696E7
A91CBAAD1EAF7A6AC75DC7C612257D076AC7676A599615C9F372F92FC05F0766
7961667DE83960657B60D985DF0FEAE26F875CC2511B604D670BF29473B7DA08
9743F1606ABBA02CD99A4E9DACE4178797E4A7645E1D5955A5B33AA56B75F5B5
C977A2335F490077E291FAA43E5254690F3EE1D39C841AB81D39C2C8AD2FE10A
4ABB0756E222459632C91508F0ED264B119DCA312E62271F42DB31D80349585A
82F1752D9229FCD77F9B20CFD598D6009DE379ADDF7F8BEE2330517036DF69BD
733F4E66269090D93B05FF5A5E80B850A355E5372E4C7B9D65950ACA679F234B
444DC900CF60655E570367700749D310C5CAD16A000EE9BEF7C8632C0D5A7183
F8A4B3419C6A7529E08B5F11E3BC50DB9B6D3DB88FBE78E3B190230EE4198207
38F57BCD1911C3EEE6E77A90D05887087EF8B37F049C243C5F22251936CFDC5F
B8540A2EBB17C77E190ADE4571C9AA08E5925E6AB68DAE03047D2E28FE6657BD
0B6ED0A0D3FAF5F544FFE760221B442D0F1A1A4BF4AC34BA4495E5BAAEDE2CBD
22613E3AAF9C72E2A2346C35DF1FA98677F67398AD0DC9D682C4C4088F5EDB8F
8BCFB81FB0970ADEC146AFB235EB647CF53B86FD05680D655D364AA59A2C4C6F
A060009AC476633ED648CA7ACE0456E28FBE6D0F29B767A9A967D778868D8EE8
AA0F38AC9E7E9A156E86C919E0B1002054B42530B59942DCC62748DEB443DD01
C79EAA02491E34AEFBBA42417EAA003C8814C84CFA82BA27F5EFA11348BA05D1
9C749B378DE4D778C658A57BC3F89D9020D6B296983A70F12F3329976D0DD71D
A55994BA8AA05A5DAD9E8722EFD11FFB467D3FC02BA4A24493204C20D9F18F74
F5BDDFA6ABEDFDF13BBD59D23A91EFD21DF615BA2DF6C47DB228705311F60679
3340A8EFE7CD6EFA651A83C23E4A57C521FA76FA0D5DD9298860B03B1C1CA924
68256DE36DABAA66350181A7404D1DA03B0C4A7FA89B98F1A43B8AFB6CC4F5BB
C03C4F42B113499E19BB684C5B9219533A8C6FA2CD5577E2008F7FABC6663F0F
D402B6E83FD5D087782D2FB65273D835ED74605554DF64108A5F7C0D86B7CB36
8926E117BABE489F326BA700901D8BE7CBF67A39F929E076D0E01FD4A505FE5E
6FA035A8F444F9AE37A3462D2D9E91CC8CF354575797C826D15E1DE20EFFDCEE
4A566A9A05210CCFD8D47298905DCDFA52D5CA51EBEF3B196A4F29208D9BCDB9
8274F9B6A994FF89C1378F3378850CFE92C6774EE4E07493C8A08608046516A2
1BB9D17328A11BD2C03A1F39A73F1AB1FA3C4E7A7B1CCB32F5A4F3ACDA46672F
140B05A3FE5A21883CC8120416E5D2E5B96A2E29A258528F1248EBED36F6DA8A
00BED5FE81B0688D56A8E7DAE8962CA3C2C24DB5CEAC1768331F2C491262C2BC
7A255BC8B0A50623159D22AB118AC48E8A211596D896956E04F8631C63CFF69A
C5A2AD07C4691B989FB2BC9C8BD3D5F03555802B1143CF512F3BCBD23B44C46B
0B8B7603EFC717192B6DDD94079A6F7DC0C5D4DF7A66445CC1FD7A377E340454
A03CBD36D8C585DB209943CDD45E9DFF32B3487F72A57A0B9ED612B80CA2BACA
FB41F5576228F422DFFD728156CF1AD887EA7CAB14B8DFEACA9D3363CC6090D6
83A7629D543C4887F14E34601F0627ACDDF184085964E866EA3C00F587A3D66B
3399BD6CAA4ABD1930CA23B057E32017E9BA9BA9BBA8A8DC0EC1A136A300D303
99028DB747F0A5A2BD360966DE381F45F62BF61208EE47394CBCA6C66D852559
85530403F45412E0FEA42A739ECB1647F47BE3AF1BCDE45BBBE4BC421F75F9B4
1090B305FBD5205570ACCA5646C390B68F046561020F3FF235CE71B0D6ADDD8C
52F8CDDFA635B83BA921C5D357A392E10A9E8540D30305CB0952D0E7AB3784B8
8E2D1104677B98257746A3F79378B29AFE6544CE782CE47C5780F1262FD690BA
449FDE6D8BA975A56770E9026BEF421E8270254625822CE28B2EC2117A7F5134
5E771B98A4016B734AA176C48EF040CCBC2A75042AE93E9B92A84FE21A68C018
1968A664224C83C60A4E2C7470C09F3BD9CFD46D661C327E5501656B29F749B2
2471779CCD0CC8FBAC26B23C67E1F5FC4E77E60099053F01524D25B85F489655
97464AF38564436B07EADE2CB3B814692CF38356B4139A56B7066CD6A10D4CC0
19376A5AF917A0C8A4E5E179A072C64972CF1726256737832A568D711ED315B7
54F457E7B590AA97C218D752E1937C35D3E53A483DD6B42D0D2488173464ECA1
0B12E6BBC1392E429B8F12EF1C0B9B6919E0C8800AB34A667B06A55CF355E704
B19D9C49538D312893B61BBA2047FBFC8E1A0E41857CC919D59474225DCE1642
C92AC6F7905F6B7B3AE7A87E42BC25B75A9EAFFF2706A2E131249D96BC7105E2
DCAE318EEDE3C3D4FBC1DD6FEC95F24702C428AD41BEA54D9E0418200D880F5A
A195DAD79BB12D2635BAF97D39FDD83EE63D99D2F2872C84058E32E327B2C5EE
D8367956D3F67BD9D62A97FE4F2C8BC893D5689BE3E05788EDE6FC5A77FECBDF
D06A4BBC7F4542B57437C5062C4FCF52BBB03D86E81A2EE93FBA47B6A75D1CAB
6DAB95F7BBDBA7B837096C93FBFE12ECF9725B9E45928E7D5594B09E0EA0A7B9
C49B0300ABDD52902E9CF37D3E1CF1C0135D38D79832974A62112EECD0BDD5E7
8B6124CAFF857CF691154AF1A190085DDE47D1C64B05ABF7C82D91CCB5B97A27
4FAFE9E02E9D13AD8173E1119EF64580764547CC7754F4DD35FB11845F26C6B9
FD116204CCAB4C9A682DE9CB324E999DC38F3041A93B77A2ED566E884C05F298
40F1A40F969E5ECF2E714281E55E31C8724438DC816FA51C74ACFC6B20A1292E
DA014F7004AC5A957239122EF6C78E4F574345C8F199154C849B8476246B5DB8
645F94BFD64368F63B63CE707EDE060630F2C6FD6B20AC9E3A67D7FE53569C0B
E8069BD029862DCB2B9688E6312AE65A9A368E7D55F3CEB107BDE8193F56A2F7
72127F93D808A363315DCD5DAE792F0EBBFF1E02394206DA2A988B8717BFF3D7
AB36821711DEC3E8D222923664C656BB3DF4282CE50C79D9E32FA32E58B2383B
604BEECE4B4FE06B3C13F56AA65ADC2206CB3596AACE8BEEB736539D78CBE602
5F7F970C807D101EA11ABF4C9BDAA4918C4CC48C20580CED2107B6391509ED72
10D99F168B0D950752A042CA7B685CF0F8A794AA019E9DAF4B03A0989D98F23C
CEFD45C5AF5B323A085D1BE2FDECB685078C2AED5A203BF6B83EE0CE85BD5A75
CC13617E89AF1F22C62D45C12908AFA4403ABE8569ABBD10DFA799DD74281243
C83C786326090C1E432079100986E397C26AA284577E1FE0D951DF89A80A372D
E7A50DDC93E38283BC28ECC41A23D32DA6650BF83D2C576818284F117DB71443
3079DE8AEDAD75F197F5CD3559B03308554E0A5AF84846374DC89A896A15B5C3
FF21F18C8F4796B103DC52B7A39F8A876B0885AF63478B665DED1CD4EC44EABC
FC730EFDDE05F3855DAD7E453A52CDFB7073AC38A54DD8BD4A2C7621C8610B1E
B13DD27ED2394746E49851B3A606259C1188CB5CC8BBD3057656822B126AECA5
D6D8D51F4740908C7EB827A551B5CAF01E26D9AACD945C4302F3C3EEAA53C878
89C9264EA0FEB9E20504332BEE2CD1839534E61CC9EB275C3AA316E128A8118F
C79CC9B40F1A59C3DC7904A456AB610C220662CB263F19E264E85CAA5836EBA8
D649C5ABC8D7D6388B3388582B44532700320254DEE06287AA73D72F5191DA71
34AC020AE6EB0371990092D354EC64D940EE88C38A5CBDB2681B9908D4974226
117ECDD2C01CD3E0AE0C4CC5F88C70D23D743B93C11D0AA77984AD3C0199E06F
81C89CC6C5948E6A74053AD1384DCDD02EA32ED09B042C8B3D61710A9034DF82
239DC24210FFB5A64EB988D434742E59E4FCD34A54BCD9D4372D32CBC249387F
CBA625475EEB8DAFDE3676573424538638B1D12501A481C82BC41CB5EC3585F8
4C26940CC3B1C3326E5BF2F6B03763A9A78AC1689F6EE1CCBC08DB7C514AE15B
036C2ABC6B627D0DAEC241221E625A6C8467C4555FDBFAF0EACA6EEEE3A8977D
7225BF5334992451E1CD7ECD2F267B440F7B25AD67D9606C620C028A8475E594
109D7762E13249D2B9DB63BEA589DDD343E73CE0A420014EA351349B81EB77E7
94CB45D24C0B214775001A4566C8D07BBDDDB56583D83C22B185248C7FB7CECF
DB23E9FAAE87BC85A109D7A2E49603430FE32C63E7410AA44E4E3EA529191BA6
EEF9B7546DC6AD5CDE205DE9CD202176AE1BC1AB243363780C40B1E0D546C776
8E2F15B3E49B3DC84368B4DCA8FDA2CEFA54D6A1799F382D7256C7881B24B270
89A47E19E2D3759EB62950D120AFD8CE5381BE2FF0766CF04BAF03DB94AA8803
D960A31023C0F1383463B07CF61587E217B8396A0D94B0C897E1593A7F814D0D
E7A97D4A21BADD609C1254EDB506396B32BE0C8447878EC9020BCAC175CE287D
9874FB1E4F43FD46CBAE009FFE2799DA98CE6F264D666C5A6E4D205F7EA30AB2
594EFE7EE151BFE29F9E4FF8161DBAD15A256DBA258DE0A7EFF5EA7CC33E4674
0619CA546AE5DF42434B4FAAC6F61203FEEDDFD9048573D43B82526A6C00F2C3
3B60D0E5EB6249019EE98F6016CF7C060982BBD6EB5E86D3192873677E4759DF
36BAB0D32483B839C481895075AF66AC3F207CE60E33B9D080001CF8935CD5FD
11B81B999BA30603BA05857E6E52AC22E73D756C82AA548278F46B88317DA4E3
7007A6FFD4F36BC1AC36AC4EFECCAA115F2CE057040DC18E500653958D58EC72
84531A799AEC161F7FE778D5D4D1FC81543BAEB485E78225D0192D12E5B7D046
C71D9221DE37B8460BDCB0CDAD76C6FD9DDFB9637DA66CE081E76B65FAD55EF2
259175FCE6ECD16D4113777574C9398CC1BFC11C3EEC535B47543079811ECAB8
84B931B7E87B19932AF63DDC9AA08BE65E2CDFF97BFF63E051ACF8625EDE1F30
63A985E2E1604C87D8E32A1F2146ABF359EA0781498E54ED64A5543C8973B642
3234BADD5F34CB7FC01C41EDC190F3390C1D4F44F11B4E64B9B046DC10EB3C3B
1D6DAD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F9_0 /PSHVPX+Helvetica-Bold 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 401.2 292.92 re
W
q
q
[0.1 0 0 0.1 0 0] cm
q
2 0 4010 2929 re
W
/DeviceGray {} cs
[1] sc
717.832 190.988 3265.84 2725.84 re
f*
5 w
1 j
/DeviceGray {} CS
[1] SC
717.832 190.988 3265.838 2725.832 re
S
Q
q
717.832 190.988 3265.84 2725.84 re
W
q
[3265.83 0 0 2725.83 717.833 190.989] cm
[/Indexed /DeviceRGB 19 <
  f7fcfdeef8fce5f5f9def2f5d6f0eeccece6b4e3d999d8c9
  87d0bd77cab266c2a453b98f41ae76319d5b238b4514813b
  067833006d2c005b2400441b
>] setcolorspace
<<
  /ImageType 1
  /Width 4
  /Height 4
  /ImageMatrix [4 0 0 -4 0 4]
  /BitsPerComponent 8
  /Decode [0 255]
  /DataSource currentfile
    /ASCII85Decode filter
    /RunLengthDecode filter
>>
pdfIm
!=9#2#n$q;"U#&4!<WuG%Li~>
%-EOD-
Q
Q
q
2 0 4010 2929 re
W
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 104.2 253.266] Tm
0 0 Td
/F9_0 12 Tf
(0.6)
[6.672
0
3.336
0
6.672
0] Tj
-3.3332 -68.1668 Td
(0.53)
[6.672
0
3.336
0
6.672
0
6.672
0] Tj
-3.3332 -136.3336 Td
(0.55)
[6.672
0
3.336
0
6.672
0
6.672
0] Tj
-3.3332 -204.5004 Td
(0.88)
[6.672
0
3.336
0
6.672
0
6.672
0] Tj
78.3332 -0.0004 Td
(0.54)
[6.672
0
3.336
0
6.672
0
6.672
0] Tj
78.3332 -68.1672 Td
(0.35)
[6.672
0
3.336
0
6.672
0
6.672
0] Tj
78.3332 -136.334 Td
(0.44)
[6.672
0
3.336
0
6.672
0
6.672
0] Tj
78.3332 -204.5008 Td
(0.75)
[6.672
0
3.336
0
6.672
0
6.672
0] Tj
163.3332 -0.0008 Td
(0.6)
[6.672
0
3.336
0
6.672
0] Tj
163.3332 -68.1676 Td
(0.5)
[6.672
0
3.336
0
6.672
0] Tj
160 -136.3344 Td
(0.39)
[6.672
0
3.336
0
6.672
0
6.672
0] Tj
160 -204.5012 Td
(0.74)
[6.672
0
3.336
0
6.672
0
6.672
0] Tj
245 -0.0012 Td
(0.6)
[6.672
0
3.336
0
6.672
0] Tj
241.6668 -68.168 Td
(0.46)
[6.672
0
3.336
0
6.672
0
6.672
0] Tj
241.6668 -136.3348 Td
(0.44)
[6.672
0
3.336
0
6.672
0
6.672
0] Tj
241.6668 -204.5016 Td
(0.72)
[6.672
0
3.336
0
6.672
0
6.672
0] Tj
Q
5 w
1 j
/DeviceGray {} CS
[0] SC
717.832 2916.82 m
3983.67 2916.82 l
S
717.832 190.988 m
3983.67 190.988 l
S
717.832 2916.82 m
717.832 190.988 l
S
3983.67 2916.82 m
3983.67 190.988 l
S
717.832 190.988 m
3983.67 190.988 l
S
717.832 2916.82 m
717.832 190.988 l
S
1125.33 190.988 m
1125.33 224.32 l
S
1125.33 2916.82 m
1125.33 2884.32 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 89.7832 4.76563] Tm
0 0 Td
/F9_0 12 Tf
(ACTION)
[8.664
0
8.664
0
7.332
0
3.336
0
9.336
0
8.664
0] Tj
Q
1942 190.988 m
1942 224.32 l
S
1942 2916.82 m
1942 2884.32 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 173.2 4.76563] Tm
0 0 Td
/F9_0 12 Tf
(Isomap)
[3.336
0
6.672
0
7.332
0
10.668
0
6.672
0
7.332
0] Tj
Q
2758.67 190.988 m
2758.67 224.32 l
S
2758.67 2916.82 m
2758.67 2884.32 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 262.617 4.76563] Tm
0 0 Td
/F9_0 12 Tf
(MDS)
[9.996
0
8.664
0
8.004
0] Tj
Q
3575.33 190.988 m
3575.33 224.32 l
S
3575.33 2916.82 m
3575.33 2884.32 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 338.95 4.76563] Tm
0 0 Td
/F9_0 12 Tf
(SIMLR)
[8.004
0
3.336
0
9.996
0
7.332
0
8.664
0] Tj
Q
717.832 2576.82 m
750.332 2576.82 l
S
3983.67 2576.82 m
3950.33 2576.82 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 23.1168 253.099] Tm
0 0 Td
/F9_0 12 Tf
(Immune)
[3.336
0
10.668
0
10.668
0
7.332
0
7.332
0
6.672
0] Tj
Q
717.832 1895.16 m
750.332 1895.16 l
S
3983.67 1895.16 m
3950.33 1895.16 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 10.2 184.932] Tm
0 0 Td
/F9_0 12 Tf
(Melanoma)
[9.996
0
6.672
0
3.336
0
6.672
0
7.332
0
7.332
0
10.668
0
6.672
0] Tj
Q
717.832 1213.49 m
750.332 1213.49 l
S
3983.67 1213.49 m
3950.33 1213.49 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 0.2 116.766] Tm
0 0 Td
/F9_0 12 Tf
(MouseBrain)
[9.996
0
7.332
0
7.332
0
6.672
0
6.672
0
8.664
0
4.668
0
6.672
0
3.336
0
7.332
0] Tj
Q
717.832 531.82 m
750.332 531.82 l
S
3983.67 531.82 m
3950.33 531.82 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 33.3668 48.5988] Tm
0 0 Td
/F9_0 12 Tf
(Pollen)
[8.004
0
7.332
0
3.336
0
3.336
0
6.672
0
7.332
0] Tj
Q
717.832 2916.82 m
3983.67 2916.82 l
S
717.832 190.988 m
3983.67 190.988 l
S
717.832 2916.82 m
717.832 190.988 l
S
3983.67 2916.82 m
3983.67 190.988 l
S
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font PSHVPX+Helvetica-Bold
%%EOF
